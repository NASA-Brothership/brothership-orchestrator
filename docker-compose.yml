services:

  brothership-frontend:
    container_name: brothership-frontend
    build:
      context: brothership-frontend/
    ports:
      - '${FRONTEND_PUBLISHED_PORT}:${FRONTEND_TARGET_PORT}'
    volumes:
      - ./brothership-frontend:/app
      - /app/node_modules

  brothership-backend:
    container_name: brothership-backend
    build: ./brothership-backend
    restart: unless-stopped
    working_dir: '/app'
    # entrypoint: ['sh', './bin/run.sh']
    tty: true
    environment:
      BACKEND_TARGET_PORT: ${BACKEND_TARGET_PORT}
      POSTGRES_ADDRESS: ${POSTGRES_ADDRESS}
      POSTGRES_PORT: ${POSTGRES_PORT}      
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_NAME: ${POSTGRES_DB}
      AWS_STORAGE_BUCKET_NAME: 'brothership-audios'
      AWS_ACCESS_KEY_ID: 'XXXXXXXXXXXXXXXXXXXX'
      AWS_SECRET_ACCESS_KEY: 'YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY'
      AWS_DEFAULT_REGION: 'us-east-1'
      AWS_S3_ENDPOINT_URL: 'http://brothership-localstack:4566'

    ports:
      - '${BACKEND_PUBLISHED_PORT}:${BACKEND_TARGET_PORT}'
    volumes:
      - ./brothership-backend:/app
    depends_on:
      - brothership-postgres
      - brothership-localstack

  brothership-postgres:
    container_name: brothership-postgres
    restart: unless-stopped
    image: postgres:14-alpine
    volumes:
      - volume-postgres-data-back:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHO: trust

  brothership-pgadmin:
    container_name: brothership-pgadmin
    restart: unless-stopped
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASS}
    ports:
      - '${PG_ADMIN_PUBLISHED_PORT}:${PG_ADMIN_TARGET_PORT}'

  brothership-localstack:
    container_name: brothership-localstack
    restart: unless-stopped
    image: localstack/localstack
    ports:
      - "4566:4566"  # Web interface (optional)
      - '4510-4559:4510-4559' # external services port range
    environment:
      - SERVICES=s3,lambda
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - ./localstack-script.sh:/etc/localstack/init/ready.d/script.sh
      - '/var/run/docker.sock:/var/run/docker.sock'
      - localstack_data:/var/lib/localstack
      # AWS Lambda
      - ./lambda/unzip.py:/etc/localstack/lambda_function.py
      - ./lambda/requirements.txt:/etc/localstack/requirements.txt

volumes:
  localstack_data:
  volume-postgres-data-back:
